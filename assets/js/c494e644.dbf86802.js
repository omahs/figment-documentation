"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[5486],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(n),m=i,f=c["".concat(l,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(f,r(r({ref:t},p),{},{components:n})):a.createElement(f,r({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var d=2;d<o;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1278:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=n(7462),i=(n(7294),n(3905));const o={title:"Submit Nomination Addresses"},r=void 0,s={unversionedId:"guides/staking-api/Polkadot/delegate/submit-nomination-addresses",id:"guides/staking-api/Polkadot/delegate/submit-nomination-addresses",title:"Submit Nomination Addresses",description:"Now that the bond is created, submit a nomination transaction to activate the stake. The previous response indicates one required input:",source:"@site/docs/guides/staking-api/Polkadot/delegate/5_submit-nomination-addresses.mdx",sourceDirName:"guides/staking-api/Polkadot/delegate",slug:"/guides/staking-api/Polkadot/delegate/submit-nomination-addresses",permalink:"/guides/staking-api/Polkadot/delegate/submit-nomination-addresses",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Submit Nomination Addresses"},sidebar:"docsSidebar",previous:{title:"Submit a Signed Transaction for Broadcast",permalink:"/guides/staking-api/Polkadot/delegate/submit-signed-transaction"},next:{title:"Sign the Nomination Transaction",permalink:"/guides/staking-api/Polkadot/delegate/sign-delegate-transaction"}},l={},d=[],p={toc:d};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Now that the bond is created, submit a nomination transaction to activate the stake. The previous response indicates one required input:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"validator_addresses")," (",(0,i.kt)("strong",{parentName:"li"},"required"),") \u2014 An array containing the address(es) of the validator(s) to which the DOT will be delegated.")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"You may nominate anywhere from 1 to 16 validators on the Polkadot network. Your DOT will be distributed automatically by the network in the most efficient way at each epoch.")),(0,i.kt)("p",null,"As in each step, we will ",(0,i.kt)("inlineCode",{parentName:"p"},"PUT /api/v1/flows/[:flow_id]/next")," with the following inputs:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "validator_addresses": "[:validator_addresses]"\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'curl -X PUT https://polkadot-slate.datahub.figment.io/api/v1/flows/[:flow_id]/next \\\n-H "Authorization: API-KEY" \\\n-H "Content-Type: application/json" \\\n-d \'{\n  "name": "create_nomination_tx",\n  "inputs": {\n    "validator_addresses": "[:validator_addresses]"\n  }\n}\'\n')),(0,i.kt)("p",null,"As in Step 2, note that in this response you can find the unsigned, serialized transaction in ",(0,i.kt)("inlineCode",{parentName:"p"},"data[create_nomination_tx][raw]"),"."),(0,i.kt)("p",null,"There are two possible actions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"refresh_nomination_tx")," \u2014 If you need to get a fresh version of the transaction Payload."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"sign_nomination_tx")," \u2014 Submit a signed transaction Payload ready to be broadcast to the network.")),(0,i.kt)("p",null,"We will choose ",(0,i.kt)("inlineCode",{parentName:"p"},"sign_nomination_tx"),", so note that it indicates one Input to collect:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"transaction_payload")," (",(0,i.kt)("strong",{parentName:"li"},"required"),") \u2014 The signed transaction payload ready to be broadcast to the network.")))}u.isMDXComponent=!0}}]);