"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[2324],{6571:(e,a,t)=>{t.d(a,{Z:()=>i});var n=t(8169),r=t(5893);const i=(0,n.Z)((0,r.jsx)("path",{d:"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"}),"ExpandMore")},5162:(e,a,t)=>{t.d(a,{Z:()=>l});var n=t(7294),r=t(6010);const i="tabItem_Ymn6";function l(e){let{children:a,hidden:t,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,l),hidden:t},a)}},5488:(e,a,t)=>{t.d(a,{Z:()=>m});var n=t(7462),r=t(7294),i=t(6010),l=t(2389),o=t(7392),s=t(7094),d=t(2466);const u="tabList__CuJ",c="tabItem_LNqP";function p(e){var a,t;const{lazy:l,block:p,defaultValue:m,values:h,groupId:k,className:f}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=h?h:g.map((e=>{let{props:{value:a,label:t,attributes:n}}=e;return{value:a,label:t,attributes:n}})),w=(0,o.l)(b,((e,a)=>e.value===a.value));if(w.length>0)throw new Error('Docusaurus error: Duplicate values "'+w.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===m?m:null!=(a=null!=m?m:null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)?a:g[0].props.value;if(null!==y&&!b.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:v,setTabGroupChoices:N}=(0,s.U)(),[E,T]=(0,r.useState)(y),x=[],{blockElementScrollPositionUntilNextRender:I}=(0,d.o5)();if(null!=k){const e=v[k];null!=e&&e!==E&&b.some((a=>a.value===e))&&T(e)}const A=e=>{const a=e.currentTarget,t=x.indexOf(a),n=b[t].value;n!==E&&(I(a),T(n),null!=k&&N(k,String(n)))},q=e=>{var a;let t=null;switch(e.key){case"ArrowRight":{var n;const a=x.indexOf(e.currentTarget)+1;t=null!=(n=x[a])?n:x[0];break}case"ArrowLeft":{var r;const a=x.indexOf(e.currentTarget)-1;t=null!=(r=x[a])?r:x[x.length-1];break}}null==(a=t)||a.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":p},f)},b.map((e=>{let{value:a,label:t,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:E===a?0:-1,"aria-selected":E===a,key:a,ref:e=>x.push(e),onKeyDown:q,onFocus:A,onClick:A},l,{className:(0,i.Z)("tabs__item",c,null==l?void 0:l.className,{"tabs__item--active":E===a})}),null!=t?t:a)}))),l?(0,r.cloneElement)(g.filter((e=>e.props.value===E))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==E})))))}function m(e){const a=(0,l.Z)();return r.createElement(p,(0,n.Z)({key:String(a)},e))}},3811:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>m,contentTitle:()=>c,default:()=>f,frontMatter:()=>u,metadata:()=>p,toc:()=>h});var n=t(7462),r=(t(7294),t(3905)),i=t(9420),l=t(3330),o=t(6571),s=t(5488),d=t(5162);const u={title:"Using the Rewards API",sidebar_position:5},c=void 0,p={unversionedId:"quickstart/rewards-api",id:"quickstart/rewards-api",title:"Using the Rewards API",description:"The Rewards API is used to query staking rewards data. When a user is staking on a validator, they earn rewards while helping to secure the network. It is challenging and very time-consuming to index and query this data on your own, so the Rewards API is your gateway to succinct rewards data on a daily basis or by epoch.",source:"@site/docs/quickstart/rewards-api.mdx",sourceDirName:"quickstart",slug:"/quickstart/rewards-api",permalink:"/quickstart/rewards-api",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Using the Rewards API",sidebar_position:5},sidebar:"docsSidebar",previous:{title:"Using the Transaction Search API",permalink:"/quickstart/transaction-search-api"},next:{title:"Using the Staking API",permalink:"/quickstart/staking-api"}},m={},h=[{value:"Requests",id:"requests",level:2},{value:"Example Requests",id:"example-requests",level:4},{value:"API Reference",id:"api-reference",level:2}],k={toc:h};function f(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},k,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The Rewards API is used to query staking rewards data. When a user is staking on a validator, they earn rewards while helping to secure the network. It is challenging and very time-consuming to index and query this data on your own, so the Rewards API is your gateway to succinct rewards data on a daily basis or by epoch.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The Rewards API is currently only available for ",(0,r.kt)("strong",{parentName:"p"},"Ethereum")," (epoch & daily) and ",(0,r.kt)("strong",{parentName:"p"},"Solana")," (epoch only)."),(0,r.kt)("p",{parentName:"admonition"},"The endpoints for this API are located at:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"https://eth-rewards.datahub.figment.io/rewards")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"https://solana-rewards.datahub.figment.io/rewards")))),(0,r.kt)("h2",{id:"requests"},"Requests"),(0,r.kt)("p",null,"You can send an HTTP ",(0,r.kt)("inlineCode",{parentName:"p"},"GET")," request to the endpoint including your API key as an ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," header to fetch rewards data."),(0,r.kt)("p",null,"The JSON payload must include the following parameters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"network"),": The network (Ethereum or Solana)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"chain_id"),": The chain identifier (",(0,r.kt)("inlineCode",{parentName:"li"},"mainnet")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"testnet"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"accounts"),": An array containing one or more PoSETH Validator addresses"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"start_time"),": The start time for collecting rewards data (format is ",(0,r.kt)("inlineCode",{parentName:"li"},"YYYY-MM-DD"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"end_time"),": The end time for collecting rewards data (format is ",(0,r.kt)("inlineCode",{parentName:"li"},"YYYY-MM-DD"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"grouping"),": Either ",(0,r.kt)("inlineCode",{parentName:"li"},"epoch")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"daily"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Example JSON for a Rewards API query"',title:'"Example',JSON:!0,for:!0,a:!0,Rewards:!0,API:!0,'query"':!0},'{\n  "network": "ethereum",\n  "chain_id": "mainnet",\n  "accounts": [\n    "0x8aa7939a2d3d9f2f88f5b3a61cf603603e7a3c28be36aa7f7312c8d0452e81486fcd24208ae8f6a44701267cf4365942"\n  ],\n  "start_time": "2022-07-23",\n  "end_time": "2022-07-26",\n  "grouping": "epoch"\n}\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you have selected ",(0,r.kt)("inlineCode",{parentName:"p"},"epoch"),", make sure that your ",(0,r.kt)("inlineCode",{parentName:"p"},"start_time")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"end_time")," align with that epoch - otherwise you may get an empty response."),(0,r.kt)("p",{parentName:"admonition"},"If you have selected ",(0,r.kt)("inlineCode",{parentName:"p"},"daily"),", keep the ",(0,r.kt)("inlineCode",{parentName:"p"},"start_time")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"end_time")," reasonably close together (within 5 days). Large ranges will cause latency in the response.")),(0,r.kt)("h4",{id:"example-requests"},"Example Requests"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(d.Z,{value:"curl",label:"curl",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Example curl request to Rewards API for Ethereum Mainnet"',title:'"Example',curl:!0,request:!0,to:!0,Rewards:!0,API:!0,for:!0,Ethereum:!0,'Mainnet"':!0},'curl -X GET https://eth-rewards.datahub.figment.io/rewards \\\n-H \'Content-Type: application/json\' \\\n-H \'Authorization: API-KEY\' \\\n-d \'{\n  // highlight-start\n  "network": "ethereum",\n  "chain_id": "mainnet",\n  "accounts": [\n    "0x8aa7939a2d3d9f2f88f5b3a61cf603603e7a3c28be36aa7f7312c8d0452e81486fcd24208ae8f6a44701267cf4365942"\n  ],\n  "start_time": "2022-07-23",\n  "end_time": "2022-07-26",\n  "grouping": "epoch"\n  // highlight-end\n}\'\n'))),(0,r.kt)(d.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Example JavaScript Fetch request to Rewards API for Ethereum Mainnet"',title:'"Example',JavaScript:!0,Fetch:!0,request:!0,to:!0,Rewards:!0,API:!0,for:!0,Ethereum:!0,'Mainnet"':!0},'const API_KEY = "YOUR API KEY";\n\nvar myHeaders = new Headers();\nmyHeaders.append("Content-Type", "application/json");\n\nvar raw = JSON.stringify({\n  // highlight-start\n  network: "ethereum",\n  chain_id: "mainnet",\n  accounts: [\n    "0x93257a7d4f1e6998f019483f149a4dbe3bfc8b89358411be769aeedd943de907f178da1773aea9016d1ac2bdfe3794ba",\n  ],\n  start_time: "2022-07-27",\n  end_time: "2022-07-28",\n  grouping: "daily",\n  // highlight-end\n});\n\nvar requestOptions = {\n  method: "POST",\n  headers: myHeaders,\n  body: raw,\n  redirect: "follow",\n};\n\nfetch(\n  `https://eth-rewards.datahub.figment.io/apikey/${API_KEY}/rewards`,\n  requestOptions\n)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.log("error", error));\n')))),(0,r.kt)(i.Z,{className:"shadow--tl",mdxType:"Accordion"},(0,r.kt)(l.Z,{expandIcon:(0,r.kt)(o.Z,{mdxType:"ExpandMore"}),mdxType:"AccordionSummary"},"Click to view example response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Example Rewards API JSON response"',title:'"Example',Rewards:!0,API:!0,JSON:!0,'response"':!0},'[\n  {\n    "accounts": [\n      "0x93257a7d4f1e6998f019483f149a4dbe3bfc8b89358411be769aeedd943de907f178da1773aea9016d1ac2bdfe3794ba"\n    ],\n    "chain_id": "mainnet",\n    "rewards": [\n      {\n        "text": "0.00335099 ETH",\n        "currency": "ETH",\n        "numeric": 3350990,\n        "exp": 9\n      }\n    ],\n    "network": "ethereum",\n    "validator": "0x93257a7d4f1e6998f019483f149a4dbe3bfc8b89358411be769aeedd943de907f178da1773aea9016d1ac2bdfe3794ba",\n    "time": "2022-07-27T00:00:00Z"\n  }\n]\n'))),(0,r.kt)("h2",{id:"api-reference"},"API Reference"),(0,r.kt)("p",null,"View the full Rewards API reference ",(0,r.kt)("a",{parentName:"p",href:"/api-reference/rewards-api/ethereum"},"HERE")),(0,r.kt)("hr",null))}f.isMDXComponent=!0}}]);