"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[9620],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>g});var a=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,i=function(t,e){if(null==t)return{};var n,a,i={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var s=a.createContext({}),c=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},p=function(t){var e=c(t.components);return a.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,s=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),d=c(n),g=i,f=d["".concat(s,".").concat(g)]||d[g]||u[g]||o;return n?a.createElement(f,r(r({ref:e},p),{},{components:n})):a.createElement(f,r({ref:e},p))}));function g(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,r=new Array(o);r[0]=d;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:i,r[1]=l;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8651:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const o={title:"Submit a Signed Chill Transaction for Broadcast"},r=void 0,l={unversionedId:"guides/staking-api-flows/polkadot/undelegate/submit-signed-chill-transaction",id:"guides/staking-api-flows/polkadot/undelegate/submit-signed-chill-transaction",title:"Submit a Signed Chill Transaction for Broadcast",description:"After signing the transaction, you will PUT /api/v1/flows/[:flow_id]/next and the Staking API will manage broadcasting the transaction to the Polkadot network.",source:"@site/docs/guides/staking-api-flows/polkadot/undelegate/5_submit-signed-chill-transaction.mdx",sourceDirName:"guides/staking-api-flows/polkadot/undelegate",slug:"/guides/staking-api-flows/polkadot/undelegate/submit-signed-chill-transaction",permalink:"/guides/staking-api-flows/polkadot/undelegate/submit-signed-chill-transaction",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Submit a Signed Chill Transaction for Broadcast"},sidebar:"docsSidebar",previous:{title:"Sign the Chill Transaction",permalink:"/guides/staking-api-flows/polkadot/undelegate/sign-chill-transaction"},next:{title:"Create Unbond Transaction",permalink:"/guides/staking-api-flows/polkadot/undelegate/create-unbond-transaction"}},s={},c=[],p={toc:c};function u(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"After signing the transaction, you will ",(0,i.kt)("inlineCode",{parentName:"p"},"PUT /api/v1/flows/[:flow_id]/next")," and the Staking API will manage broadcasting the transaction to the Polkadot network."),(0,i.kt)("p",null,"At this step, the ",(0,i.kt)("inlineCode",{parentName:"p"},"inputs")," JSON will be:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="inputs"',title:'"inputs"'},'{\n  "transaction_payload": "[:signed_transaction_payload]"\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Example curl request"',title:'"Example',curl:!0,'request"':!0},'curl --request PUT \\\n  --url https://polkadot-slate.datahub.figment.io/api/v1/flows/[:flow_id]/next \\\n  --header \'Authorization: API-KEY\' \\\n  --header \'Content-Type: application/json\' \\\n  --data \'{\n  "name": "sign_chill_tx",\n  "inputs": {\n    "transaction_payload": "[:signed_transaction_payload]"\n  }\n}\'\n')),(0,i.kt)("p",null,"With the signed transaction provided, Staking API will broadcast it to the network. As the transaction progresses towards confirmation, the returned state will be ",(0,i.kt)("inlineCode",{parentName:"p"},"chill_tx_broadcasting"),"."),(0,i.kt)("p",null,"Upon transaction finalization, the chill will be complete and you can move on to one of the two next steps:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"complete")," \u2014 use this action if you are done and do not want to unbond"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"create_unbond_tx")," \u2014 use this action if you want to continue without unbonding")))}u.isMDXComponent=!0}}]);