"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[8347],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>f});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),u=c(a),f=o,h=u["".concat(l,".").concat(f)]||u[f]||p[f]||i;return a?n.createElement(h,s(s({ref:t},d),{},{components:a})):n.createElement(h,s({ref:t},d))}));function f(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,s=new Array(i);s[0]=u;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:o,s[1]=r;for(var c=2;c<i;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4494:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var n=a(7462),o=(a(7294),a(3905)),i=a(9960);const s={title:"Staking API Overview",sidebar_position:1},r=void 0,l={unversionedId:"guides/slate-flows/staking-api-overview",id:"guides/slate-flows/staking-api-overview",title:"Staking API Overview",description:"Figment's Staking API, named Slate, drastically increases the speed at which developers are able to add new custodial and staking functionalities for many Proof-of-Stake (PoS) assets. Slate abstracts away all network-specific work and allows API interaction in the exact same way regardless of network or the type of action your user wishes to take.",source:"@site/docs/guides/slate-flows/staking-api-overview.mdx",sourceDirName:"guides/slate-flows",slug:"/guides/slate-flows/staking-api-overview",permalink:"/guides/slate-flows/staking-api-overview",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Staking API Overview",sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Working With Slate Flows",permalink:"/guides/slate-flows/"},next:{title:"Slate Endpoints",permalink:"/guides/slate-flows/slate-endpoints"}},c={},d=[{value:"Slate Core Concepts",id:"slate-core-concepts",level:2},{value:"Flows",id:"flows",level:3},{value:"Actions",id:"actions",level:3},{value:"Inputs",id:"inputs",level:3},{value:"Payloads",id:"payloads",level:3},{value:"Using Slate",id:"using-slate",level:2}],p={toc:d};function u(e){let{components:t,...s}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Figment's Staking API, named Slate, drastically increases the speed at which developers are able to add new custodial and staking functionalities for many Proof-of-Stake (PoS) assets. Slate abstracts away all network-specific work and allows API interaction in the exact same way regardless of network or the type of action your user wishes to take."),(0,o.kt)("p",null,"Slate gets you to market faster, by reducing research and discovery work by weeks and the engineering time by months."),(0,o.kt)("p",null,"Using Slate's concepts of Flows, Actions, Inputs, and Payloads, it is possible to build dynamic UIs to collect data and guide users through each workflow without the need to hard code specifics for a given network."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Workflow Without Staking API",src:a(9614).Z,width:"1881",height:"814"})),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Workflow With Staking API",src:a(3957).Z,width:"1881",height:"647"})),(0,o.kt)("h2",{id:"slate-core-concepts"},"Slate Core Concepts"),(0,o.kt)("h3",{id:"flows"},"Flows"),(0,o.kt)("p",null,"Slate is based around the concept of a Flow, a specific set of actions to be completed. For example, staking SOL on Solana is one Flow type, and un-staking NEAR is another.\nA Flow may have multiple steps but will not be considered complete until the delegation is active or the un-staking process is finished."),(0,o.kt)("h3",{id:"actions"},"Actions"),(0,o.kt)("p",null,"At each step in the Flow, Slate's response contains a JSON object with each possible action that can be taken. For example, the first step in staking on Solana requires SOL be held in a stake account. To achieve this, the API response received from Slate indicates two possible actions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"assign_stake_account")," to use an existing inactive account."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"create_stake_account")," to create and fund a new account.")),(0,o.kt)("h3",{id:"inputs"},"Inputs"),(0,o.kt)("p",null,"For each action, a number of Inputs indicates what data needs to be collected and submitted to Slate in order to build a transaction."),(0,o.kt)("p",null,"For example, a delegation transaction for Solana requires ",(0,o.kt)("inlineCode",{parentName:"p"},"validator_address"),"; the vote address of the validator to which the stake is delegated.\nEach Input includes a display which can be used for human readable Input field labels, as well as a description which can be used as a tool tip or other means of clarifying the value that is being collected."),(0,o.kt)("h3",{id:"payloads"},"Payloads"),(0,o.kt)("p",null,"For each step in a Flow where a transaction must be signed, the response from Slate includes a serialized transaction Payload ready for signature. It is your responsibility to manage signing the transaction and submitting the signed Payload back to Slate for broadcasting to the network."),(0,o.kt)("h2",{id:"using-slate"},"Using Slate"),(0,o.kt)("p",null,"Now that you are familiar with the core concepts Slate uses to navigate complex Flows on various PoS networks, you can take a deeper look at how they all work together in practice. Check out our guide to ",(0,o.kt)(i.Z,{to:"/guides/slate-flows",mdxType:"Link"},"Working With Slate Flows"),"."),(0,o.kt)("p",null,"Figment has also published an NPM package for decoding Slate transactions: ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@figmentio/slate"},"https://www.npmjs.com/package/@figmentio/slate")),(0,o.kt)("hr",null))}u.isMDXComponent=!0},3957:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/workflow_with_slate-395fcfa3aa882a968fd686a9ff880427.jpeg"},9614:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/workflow_without_slate-4094e020ebfaeb5e470434f673749d29.jpeg"}}]);