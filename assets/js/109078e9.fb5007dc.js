"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[9570],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),d=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=d(t.components);return a.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,s=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),u=d(n),g=r,f=u["".concat(s,".").concat(g)]||u[g]||c[g]||i;return n?a.createElement(f,o(o({ref:e},p),{},{components:n})):a.createElement(f,o({ref:e},p))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:r,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4746:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const i={title:"Submit a Signed Withdraw Transaction for Broadcast"},o=void 0,l={unversionedId:"guides/staking-api-flows/polkadot/undelegate/submit-signed-withdraw-transaction",id:"guides/staking-api-flows/polkadot/undelegate/submit-signed-withdraw-transaction",title:"Submit a Signed Withdraw Transaction for Broadcast",description:"After signing the transaction, you will PUT /api/v1/flows/[:flow_id]/next and the Staking API will manage broadcasting the transaction to the Polkadot network.",source:"@site/docs/guides/staking-api-flows/polkadot/undelegate/11_submit-signed-withdraw-transaction.mdx",sourceDirName:"guides/staking-api-flows/polkadot/undelegate",slug:"/guides/staking-api-flows/polkadot/undelegate/submit-signed-withdraw-transaction",permalink:"/guides/staking-api-flows/polkadot/undelegate/submit-signed-withdraw-transaction",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"Submit a Signed Withdraw Transaction for Broadcast"},sidebar:"docsSidebar",previous:{title:"Sign the Withdraw Transaction",permalink:"/guides/staking-api-flows/polkadot/undelegate/sign-withdraw-transaction"},next:{title:"Add a Staking Proxy",permalink:"/guides/staking-api-flows/polkadot/add-staking-proxy/"}},s={},d=[{value:"Un-Delegation Flow Complete",id:"un-delegation-flow-complete",level:2}],p={toc:d};function c(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"After signing the transaction, you will ",(0,r.kt)("inlineCode",{parentName:"p"},"PUT /api/v1/flows/[:flow_id]/next")," and the Staking API will manage broadcasting the transaction to the Polkadot network."),(0,r.kt)("p",null,"At this step, the ",(0,r.kt)("inlineCode",{parentName:"p"},"inputs")," JSON will be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="inputs"',title:'"inputs"'},'{\n  "transaction_payload": "[:signed_transaction_payload]"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Example curl request"',title:'"Example',curl:!0,'request"':!0},'curl --request PUT \\\n  --url https://slate.figment.io/api/v1/flows/[:flow_id]/next \\\n  --header \'Authorization: API-KEY\' \\\n  --header \'Content-Type: application/json\' \\\n  --data \'{\n  "name": "sign_withdraw_tx",\n  "inputs": {\n    "transaction_payload": "[:signed_transaction_payload]"\n  }\n}\'\n')),(0,r.kt)("p",null,"With the signed transaction provided, Staking API will broadcast it to the network. As the transaction progresses towards confirmation, the returned state will be ",(0,r.kt)("inlineCode",{parentName:"p"},"withdraw_tx_broadcasting"),"."),(0,r.kt)("p",null,"Once the transaction is confirmed, the DOT will be withdrawn and this flow will be complete!"),(0,r.kt)("h2",{id:"un-delegation-flow-complete"},"Un-Delegation Flow Complete"),(0,r.kt)("p",null,"Congratulations, your stake is deactivated and withdrawn!"))}c.isMDXComponent=!0}}]);