"use strict";(self.webpackChunkfigment_documentation=self.webpackChunkfigment_documentation||[]).push([[4210],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),g=o,f=d["".concat(s,".").concat(g)]||d[g]||p[g]||r;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8247:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const r={title:"Submit Staking Account Data"},i=void 0,l={unversionedId:"guides/staking-api-flows/solana/delegate/submit-staking-account-data",id:"guides/staking-api-flows/solana/delegate/submit-staking-account-data",title:"Submit Staking Account Data",description:"After collecting the required Inputs, we PUT /api/v1/flows/[",source:"@site/docs/guides/staking-api-flows/solana/delegate/2_submit-staking-account-data.mdx",sourceDirName:"guides/staking-api-flows/solana/delegate",slug:"/guides/staking-api-flows/solana/delegate/submit-staking-account-data",permalink:"/guides/staking-api-flows/solana/delegate/submit-staking-account-data",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Submit Staking Account Data"},sidebar:"docsSidebar",previous:{title:"Create a New Flow",permalink:"/guides/staking-api-flows/solana/delegate/create-new-flow"},next:{title:"Sign the Stake Account Transaction",permalink:"/guides/staking-api-flows/solana/delegate/sign-stake-account-transaction"}},s={},c=[],u={toc:c};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"After collecting the required Inputs, we ",(0,o.kt)("inlineCode",{parentName:"p"},"PUT /api/v1/flows/[:flow_id]/next")," to move on to the next step. In this case, the ",(0,o.kt)("inlineCode",{parentName:"p"},"inputs")," JSON would be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "funding_account_pubkey": "[:funding_account_pubkey]",\n  "amount": "[:amount]"\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'curl -X PUT https://solana-slate.datahub.figment.io/api/v1/flows/[:flow_id]/next \\\n-H "Authorization: API-KEY" \\\n-H "Content-Type: application/json" \\\n-d \'{\n  "name": "create_new_stake_account",\n  "inputs": {\n    "funding_account_pubkey": "[:funding_account_pubkey]",\n    "amount": "[:amount]"\n  }\n}\'\n')),(0,o.kt)("p",null,"Note that in this response you can find the unsigned, serialized transaction in ",(0,o.kt)("inlineCode",{parentName:"p"},"data[create_stake_account_transaction][raw]"),"."),(0,o.kt)("p",null,"Again we see two possible ",(0,o.kt)("inlineCode",{parentName:"p"},"actions")," :"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"refresh_stake_account_tx")," \u2014 If you need to get a fresh version of the transaction Payload (i.e., the recent blockhash has expired)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"sign_stake_account_tx")," \u2014 Submit a signed transaction Payload ready to be broadcast to the network.")),(0,o.kt)("p",null,"We will choose ",(0,o.kt)("inlineCode",{parentName:"p"},"sign_stake_account_tx"),", which indicates one Input to collect:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"transaction_payload")," (",(0,o.kt)("strong",{parentName:"li"},"required"),") \u2014 The signed transaction Payload ready to be broadcast to the network.")))}p.isMDXComponent=!0}}]);